# Generated by Django 3.2.4 on 2022-01-24 18:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import internal_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0023_auto_20220121_2101"),
    ]

    operations = [
        migrations.CreateModel(
            name="DailyMenuPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "План меню на день",
                "verbose_name_plural": "Планы меню на день",
            },
        ),
        migrations.CreateModel(
            name="Personnel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("position", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.',
                                regex="^\\+?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("date_hired", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("working", "Работает"),
                            ("fired", "Уволен"),
                            ("vacation", "Отпуск"),
                            ("maternity_leave", "Декрет"),
                            ("probation", "Исп. срок"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="internal-api/staff/"
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("fathers_name", models.CharField(max_length=255)),
                ("date_of_birth", models.DateField()),
                ("passport", models.CharField(max_length=100)),
                ("place_of_birth", models.CharField(max_length=255)),
                ("department_issued_passport", models.CharField(max_length=255)),
                ("identification_number", models.CharField(max_length=255)),
                ("date_passport_issued", models.DateField()),
                ("date_passport_valid", models.DateField()),
                ("contract_period", models.IntegerField()),
                ("contract_type", models.CharField(max_length=255)),
                ("is_archive", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Персонал",
                "verbose_name_plural": "Персонал",
            },
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.TextField()),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(auto_now=True)),
                ("is_archive", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.',
                                regex="^\\+?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("extra_info", models.JSONField(blank=True, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("bank_identifier_code", models.IntegerField(blank=True, null=True)),
                (
                    "bank_account",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("inner_id", models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="WarehouseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("approving", "Подтверждается"),
                            ("delivered", "Доставлен"),
                            ("canceled", "Отменен"),
                            ("dispatched", "Отправлен"),
                        ],
                        max_length=255,
                    ),
                ),
                ("waybill", models.CharField(blank=True, max_length=255, null=True)),
                ("waybill_date", models.DateField(blank=True, null=True)),
                (
                    "order_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_archive", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="WarehouseOrderPositions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.FloatField(default=0)),
                ("bonus", models.IntegerField(default=0)),
                ("special", models.FloatField(default=0)),
                ("flaw", models.FloatField(default=0)),
                ("buying_price", models.FloatField(default=0)),
                ("value_added_tax", models.FloatField(default=0)),
                ("value_added_tax_value", models.FloatField(default=0)),
                ("margin", models.FloatField(default=0)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="warehouse_order_product",
                        to="products.product",
                    ),
                ),
                (
                    "warehouse_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="warehouse_order",
                        to="internal_api.warehouseorder",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="warehouseorder",
            name="order_positions",
            field=models.ManyToManyField(
                blank=True,
                through="internal_api.WarehouseOrderPositions",
                to="products.Product",
            ),
        ),
        migrations.AddField(
            model_name="warehouseorder",
            name="shop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="internal_api.shop"
            ),
        ),
        migrations.AddField(
            model_name="warehouseorder",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="warehouse_order",
                to="internal_api.supplier",
            ),
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shop", models.PositiveIntegerField(db_index=True)),
                ("remaining", models.FloatField(blank=True, default=0, null=True)),
                ("min_remaining", models.FloatField(blank=True, default=0, null=True)),
                ("max_remaining", models.FloatField(blank=True, default=0, null=True)),
                ("margin", models.FloatField(blank=True, null=True)),
                ("auto_order", models.BooleanField(default=False)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="warehouse",
                        to="products.product",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="warehouse",
                        to="internal_api.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TechCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("amount", models.FloatField(default=1)),
                ("is_archive", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="internal_api.personnel",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Техкарта",
                "verbose_name_plural": "Техкарты",
            },
        ),
        migrations.CreateModel(
            name="SupplyContract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("contract_number", models.CharField(max_length=255)),
                (
                    "contract",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=internal_api.models.create_contract_download_path,
                    ),
                ),
                ("contract_date", models.DateField()),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="supply_contract",
                        to="internal_api.supplier",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RemainingProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("remaining", models.FloatField(default=1)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="remaining_product",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="personnel",
            name="working_place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="internal_api.shop"
            ),
        ),
        migrations.CreateModel(
            name="MenuDishes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "dish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="menu_dish",
                        to="internal_api.techcard",
                    ),
                ),
                (
                    "menu",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="internal_api.dailymenuplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заявка меню на день",
                "verbose_name_plural": "Заявки меню на день",
            },
        ),
        migrations.AddField(
            model_name="dailymenuplan",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="internal_api.personnel"
            ),
        ),
        migrations.AddField(
            model_name="dailymenuplan",
            name="dishes",
            field=models.ManyToManyField(
                through="internal_api.MenuDishes", to="internal_api.TechCard"
            ),
        ),
    ]
