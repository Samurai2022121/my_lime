# Generated by Django 4.0.1 on 2022-05-08 16:07

import uuid
from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import discounts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0039_remove_product_expiration_date_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Benefit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("percentage", "скидка на выбранные товары, %"),
                            ("absolute", "скидка на выбранные товары, сумма"),
                            (
                                "multibuy",
                                "самый недорогой из выбранных товаров -- бесплатно",
                            ),
                            ("fixed-price", "стоимость всех выбранных товаров"),
                        ],
                        default="percentage",
                        max_length=16,
                        verbose_name="тип",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=9,
                        verbose_name="значение",
                    ),
                ),
            ],
            options={
                "verbose_name": "выгода",
                "verbose_name_plural": "выгоды",
            },
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("count", "общее количество товаров из выборки"),
                            ("value", "товаров из выборки на сумму"),
                            ("coverage", "число отдельных товаров из выборки"),
                        ],
                        default="count",
                        max_length=16,
                        verbose_name="тип",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=9,
                        verbose_name="значение",
                    ),
                ),
            ],
            options={
                "verbose_name": "условие",
                "verbose_name_plural": "условия",
            },
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="название"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="описание"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата создания"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="открыто"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="активно"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("site", "доступно для всех"),
                            ("voucher", "доступно по одноразовому коду"),
                            ("loyalty", "доступно по карте клиента"),
                            ("buyer", "доступно зарегистрированным пользователям"),
                        ],
                        default="site",
                        max_length=16,
                        verbose_name="тип",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="доступно с"
                    ),
                ),
                (
                    "ended_at",
                    models.DateTimeField(
                        default=discounts.models.in_a_month, verbose_name="доступно до"
                    ),
                ),
                (
                    "order_limit",
                    models.PositiveBigIntegerField(
                        default=0,
                        verbose_name="использовать в одной продаже не более, раз",
                    ),
                ),
                (
                    "site_limit",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="использовать не более, раз"
                    ),
                ),
                (
                    "buyer_limit",
                    models.PositiveBigIntegerField(
                        default=0,
                        verbose_name="использовать одному покупателю не более, раз",
                    ),
                ),
                (
                    "application_count",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="использовано, раз"
                    ),
                ),
                (
                    "benefit",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offer",
                        to="discounts.benefit",
                        verbose_name="выгода",
                    ),
                ),
                (
                    "condition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offer",
                        to="discounts.condition",
                        verbose_name="условие",
                    ),
                ),
            ],
            options={
                "verbose_name": "предложение",
                "verbose_name_plural": "предложения",
                "ordering": ("created_at",),
            },
        ),
        migrations.CreateModel(
            name="Voucher",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата создания"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="активно"),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vouchers",
                        to="discounts.offer",
                        verbose_name="предложение",
                    ),
                ),
            ],
            options={
                "verbose_name": "ваучер",
                "verbose_name_plural": "ваучеры",
            },
        ),
        migrations.CreateModel(
            name="Range",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "includes_all",
                    models.BooleanField(
                        default=False, verbose_name="действует на все продукты"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="название"
                    ),
                ),
                (
                    "exclude_categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exclude_ranges",
                        to="products.Category",
                        verbose_name="не действует на категории товаров",
                    ),
                ),
                (
                    "exclude_product_units",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exclude_ranges",
                        to="products.ProductUnit",
                        verbose_name="не действует на товарные единицы",
                    ),
                ),
                (
                    "exclude_products",
                    models.ManyToManyField(
                        blank=True,
                        related_name="exclude_ranges",
                        to="products.Product",
                        verbose_name="не действует на товары",
                    ),
                ),
                (
                    "include_categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="include_ranges",
                        to="products.Category",
                        verbose_name="действует на категории товаров",
                    ),
                ),
                (
                    "include_product_units",
                    models.ManyToManyField(
                        blank=True,
                        related_name="include_ranges",
                        to="products.ProductUnit",
                        verbose_name="действует на товарные единицы",
                    ),
                ),
                (
                    "include_products",
                    models.ManyToManyField(
                        blank=True,
                        related_name="include_ranges",
                        to="products.Product",
                        verbose_name="действует на товары",
                    ),
                ),
            ],
            options={
                "verbose_name": "диапазон товаров",
                "verbose_name_plural": "диапазоны товаров",
            },
        ),
        migrations.CreateModel(
            name="LoyaltyCard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="дата создания"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="активно"),
                ),
                (
                    "application_count",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="использовано, раз"
                    ),
                ),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="покупатель",
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="discounts.offer",
                        verbose_name="предложение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Программа лояльности",
                "verbose_name_plural": "Программа лояльности",
                "default_related_name": "loyalty_cards",
            },
        ),
        migrations.AddField(
            model_name="condition",
            name="range",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conditions",
                to="discounts.range",
                verbose_name="диапазоны товаров",
            ),
        ),
        migrations.AddField(
            model_name="benefit",
            name="range",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="benefits",
                to="discounts.range",
                verbose_name="диапазоны товаров",
            ),
        ),
        migrations.CreateModel(
            name="BuyerCount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "application_count",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="использовано, раз"
                    ),
                ),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="покупатель",
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="discounts.offer",
                        verbose_name="предложение",
                    ),
                ),
            ],
            options={
                "verbose_name": "использование предложения",
                "verbose_name_plural": "использования предложения",
                "default_related_name": "buyer_counts",
                "unique_together": {("buyer", "offer")},
            },
        ),
    ]
